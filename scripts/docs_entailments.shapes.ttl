# baseURI: https://www.opengis.net/def/profile/docs_entailments
# imports: http://datashapes.org/dash
# imports: http://www.w3.org/2004/02/skos/core

@prefix dash: <http://datashapes.org/dash#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix : <https://www.opengis.net/def/profile/prof2skos#> .
@prefix swa: <http://topbraid.org/swa#> .
@prefix tosh: <http://topbraid.org/tosh#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix prof: <http://www.w3.org/ns/dx/prof/> .

<https://www.opengis.net/def/profile/docs_entailments>
  a owl:Ontology ;
  owl:imports <http://datashapes.org/dash> ;
  owl:imports <http://www.w3.org/2004/02/skos/core> ;
  dcterms:description "Entail Doc Register (JSON-LD view) as Concept Scheme"
.

:NodeShape_prof_as_concept
  a sh:NodeShape ;
  sh:rule :prof_as_concept ;
  sh:rule :top_if_no_parent ;
  sh:targetClass prof:Profile ;
.

:NodeShape_doc
  a sh:NodeShape ;
  sh:rule :dcat_landingPage_from_rdfs_seeAlso ;
  sh:targetClass skos:Concept ;
.


:prof_as_concept
  a sh:SPARQLRule ;
  rdfs:label "Entail profile as skos concepts" ;
  sh:construct """PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
                  PREFIX prof: <http://www.w3.org/ns/dx/prof/>
                  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
                  PREFIX  dcterms: <http://purl.org/dc/terms/>
                  CONSTRUCT {
                    ?this a skos:Concept .
                    ?this skos:inScheme <http://www.opengis.net/def/metamodel/profiles> .
                    ?this skos:broader ?c .
                    ?c skos:narrower ?this .
                    ?this skos:prefLabel ?preflabel .
                    }
                    WHERE {
                         OPTIONAL
                            { ?this prof:isProfileOf ?c }
                         OPTIONAL
                            { ?this rdfs:label ?dctitle }
                         OPTIONAL
                            { ?this dcterms:title ?dctitle  }
                         OPTIONAL
                            { ?this skos:prefLabel ?pref  }
                         BIND ( COALESCE (?pref, ?dctitle, ?dctitle , str(?this) ) as ?preflabel )


                  }""" ;

.

:top_if_no_parent
  a sh:SPARQLRule ;
  rdfs:label "Add as top parent to container iff no broader exists" ;
  sh:construct """PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
                  PREFIX prof: <http://www.w3.org/ns/dx/prof/>
                  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
                  PREFIX  dcterms: <http://purl.org/dc/terms/>
                  CONSTRUCT {
                    <http://www.opengis.net/def/metamodel/profiles> skos:hasTopConcept ?tc
                  }
                  WHERE
                  {
                       ?tc a skos:Concept FILTER (?tc = ?this )
                       FILTER NOT EXISTS { ?this prof:isProfileOf ?parent }

                  }
                  """
.

:dcat_landingPage_from_rdfs_seeAlso
  a sh:SPARQLRule ;
  rdfs:label "Entail dcat:landingPage from rdfs:seeAlso" ;
  sh:construct """
    PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
    PREFIX dcat: <http://www.w3.org/ns/dcat#>
    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
    PREFIX defs: <http://www.opengis.net/def/>
    CONSTRUCT {
      ?this dcat:landingPage ?html
    } WHERE {
      ?this skos:inScheme defs:docs ;
        rdfs:seeAlso ?html
      .
      FILTER (STRSTARTS(STR(?html), "http://docs.opengeospatial.org"))
    }
  """
.

:doctype-collections
  a sh:NodeShape ;
  sh:targetNode :dummy ;
  sh:rule [
    a sh:SPARQLRule ;
    rdfs:label "Create skos:Collection's for document types" ;
    sh:construct """
      prefix na: <http://www.opengis.net/def/metamodel/ogc-na/>
      prefix skos: <http://www.w3.org/2004/02/skos/core#>

      CONSTRUCT {
        ?collection a skos:Collection ;
          skos:prefLabel ?collectionLabel ;
          rdfs:label ?collectionLabel ;
          skos:inScheme <http://www.opengis.net/def/docs> ;
          skos:member ?doc ;
        .
      } WHERE {
        ?doc na:doctype ?docType .
        ?docType skos:prefLabel ?docTypeLabel .
        BIND(IRI(REPLACE(str(?docType), '/?$', '/collection')) as ?collection) .
        BIND(CONCAT('Documents of type ', ?docTypeLabel) as ?collectionLabel) .
      }
      """
  ] ;
.