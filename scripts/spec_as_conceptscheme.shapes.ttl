# baseURI: https://www.opengis.net/def/profile/orm/specascs
# imports: http://datashapes.org/dash
# imports: http://www.w3.org/2004/02/skos/core

@prefix dash: <http://datashapes.org/dash#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix : <https://www.opengis.net/def/profile/orm/specascs#> .
@prefix swa: <http://topbraid.org/swa#> .
@prefix tosh: <http://topbraid.org/tosh#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix spec: <http://www.opengis.net/def/ont/modspec/> .

<https://www.opengis.net/def/profile/orm/specascs>
  a owl:Ontology ;
  owl:imports <http://datashapes.org/dash> ;
  owl:imports <http://www.w3.org/2004/02/skos/core> ;
  skos:definition "Entails a concept scheme for a given specification, with topconcepts for each conformance class and each requirement being a narrower concept. Supports visualisation in a heirarchy"
.

:NodeShape_ConceptScheme
  a sh:NodeShape ;
  sh:rule :status ;
  sh:targetClass skos:ConceptScheme ;
.

:status
 a sh:SPARQLRule ;
  rdfs:label "Add status code if missing"@en;
  rdfs:comment "Assume status valid if not present.  Note original data and prior entailments for experimental resources must set status if not present"@en ;
  sh:construct """
		     PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
		     PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
			 PREFIX policy: <http://www.opengis.net/def/metamodel/ogc-na/>
		     CONSTRUCT  {
				 ?this policy:status ?status .
				}
			 WHERE {
			    ?this a skos:ConceptScheme .
                OPTIONAL { ?this policy:status ?cstatus }
                BIND ( COALESCE ( ?cstatus , <http://www.opengis.net/def/status/experimental> ) AS ?status )
			    }
""" ;
.

:NodeShape_conformance_class
  a sh:NodeShape ;
  sh:rule :specelements ;
  sh:targetClass spec:ConformanceClass ;
.

:specelements
  a sh:SPARQLRule ;
  rdfs:label "Create missing concept scheme" ;
  sh:construct """PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
  		     PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
CONSTRUCT {
  ?cs a skos:ConceptScheme ;
    rdfs:label ?cslabel ;
    skos:topConcept ?this ;
    .
  ?this a skos:Concept ;
    skos:topConceptOf ?cs ;
    skos:inScheme ?cs ;
    skos:narrower ?req ;
  .
  ?req skos:broader ?this .
}
WHERE {
    
    FILTER NOT EXISTS { ?c skos:broader ?this }
}""" ;
.




